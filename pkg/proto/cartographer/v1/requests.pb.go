// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        (unknown)
// source: cartographer/v1/requests.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RequestType defines the type of request being made
type RequestType int32

const (
	RequestType_REQUEST_TYPE_UNSPECIFIED RequestType = 0
	RequestType_REQUEST_TYPE_DATA        RequestType = 1 // requests that will include links
	RequestType_REQUEST_TYPE_GROUP       RequestType = 2 // group creation/querying for existing groups
	RequestType_REQUEST_TYPE_TAG         RequestType = 3 // tag creations/querying for existing groups
)

// Enum value maps for RequestType.
var (
	RequestType_name = map[int32]string{
		0: "REQUEST_TYPE_UNSPECIFIED",
		1: "REQUEST_TYPE_DATA",
		2: "REQUEST_TYPE_GROUP",
		3: "REQUEST_TYPE_TAG",
	}
	RequestType_value = map[string]int32{
		"REQUEST_TYPE_UNSPECIFIED": 0,
		"REQUEST_TYPE_DATA":        1,
		"REQUEST_TYPE_GROUP":       2,
		"REQUEST_TYPE_TAG":         3,
	}
)

func (x RequestType) Enum() *RequestType {
	p := new(RequestType)
	*p = x
	return p
}

func (x RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_cartographer_v1_requests_proto_enumTypes[0].Descriptor()
}

func (RequestType) Type() protoreflect.EnumType {
	return &file_cartographer_v1_requests_proto_enumTypes[0]
}

func (x RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestType.Descriptor instead.
func (RequestType) EnumDescriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{0}
}

// CartographerRequest is a generic request message re-used in get/delete/add
type CartographerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []*Tag                 `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	Groups        []*Group               `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	Links         []*Link                `protobuf:"bytes,3,rep,name=links,proto3" json:"links,omitempty"`
	Terms         []string               `protobuf:"bytes,4,rep,name=terms,proto3" json:"terms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartographerRequest) Reset() {
	*x = CartographerRequest{}
	mi := &file_cartographer_v1_requests_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartographerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartographerRequest) ProtoMessage() {}

func (x *CartographerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cartographer_v1_requests_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartographerRequest.ProtoReflect.Descriptor instead.
func (*CartographerRequest) Descriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{0}
}

func (x *CartographerRequest) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CartographerRequest) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *CartographerRequest) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *CartographerRequest) GetTerms() []string {
	if x != nil {
		return x.Terms
	}
	return nil
}

// CartographerResponse is the generic response message
type CartographerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           []string               `protobuf:"bytes,1,rep,name=msg,proto3" json:"msg,omitempty"`
	Tags          []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Groups        []string               `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	Links         []*Link                `protobuf:"bytes,4,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartographerResponse) Reset() {
	*x = CartographerResponse{}
	mi := &file_cartographer_v1_requests_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartographerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartographerResponse) ProtoMessage() {}

func (x *CartographerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cartographer_v1_requests_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartographerResponse.ProtoReflect.Descriptor instead.
func (*CartographerResponse) Descriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{1}
}

func (x *CartographerResponse) GetMsg() []string {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *CartographerResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CartographerResponse) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *CartographerResponse) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

// PingRequest is used for health check
type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_cartographer_v1_requests_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cartographer_v1_requests_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{2}
}

func (x *PingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// PingResponse is the health check response
type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_cartographer_v1_requests_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cartographer_v1_requests_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{3}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// CartographerGetRequest is used for retrieving data
type CartographerGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *CartographerRequest   `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Type          RequestType            `protobuf:"varint,2,opt,name=type,proto3,enum=cartographer.v1.RequestType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartographerGetRequest) Reset() {
	*x = CartographerGetRequest{}
	mi := &file_cartographer_v1_requests_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartographerGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartographerGetRequest) ProtoMessage() {}

func (x *CartographerGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cartographer_v1_requests_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartographerGetRequest.ProtoReflect.Descriptor instead.
func (*CartographerGetRequest) Descriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{4}
}

func (x *CartographerGetRequest) GetRequest() *CartographerRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *CartographerGetRequest) GetType() RequestType {
	if x != nil {
		return x.Type
	}
	return RequestType_REQUEST_TYPE_UNSPECIFIED
}

// CartographerGetResponse contains the retrieved data
type CartographerGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *CartographerResponse  `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartographerGetResponse) Reset() {
	*x = CartographerGetResponse{}
	mi := &file_cartographer_v1_requests_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartographerGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartographerGetResponse) ProtoMessage() {}

func (x *CartographerGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cartographer_v1_requests_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartographerGetResponse.ProtoReflect.Descriptor instead.
func (*CartographerGetResponse) Descriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{5}
}

func (x *CartographerGetResponse) GetResponse() *CartographerResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// CartographerStreamGetRequest is used for streaming data
type CartographerStreamGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *CartographerRequest   `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Type          RequestType            `protobuf:"varint,2,opt,name=type,proto3,enum=cartographer.v1.RequestType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartographerStreamGetRequest) Reset() {
	*x = CartographerStreamGetRequest{}
	mi := &file_cartographer_v1_requests_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartographerStreamGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartographerStreamGetRequest) ProtoMessage() {}

func (x *CartographerStreamGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cartographer_v1_requests_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartographerStreamGetRequest.ProtoReflect.Descriptor instead.
func (*CartographerStreamGetRequest) Descriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{6}
}

func (x *CartographerStreamGetRequest) GetRequest() *CartographerRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *CartographerStreamGetRequest) GetType() RequestType {
	if x != nil {
		return x.Type
	}
	return RequestType_REQUEST_TYPE_UNSPECIFIED
}

// CartographerStreamGetResponse contains streamed data
type CartographerStreamGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *CartographerResponse  `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartographerStreamGetResponse) Reset() {
	*x = CartographerStreamGetResponse{}
	mi := &file_cartographer_v1_requests_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartographerStreamGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartographerStreamGetResponse) ProtoMessage() {}

func (x *CartographerStreamGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cartographer_v1_requests_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartographerStreamGetResponse.ProtoReflect.Descriptor instead.
func (*CartographerStreamGetResponse) Descriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{7}
}

func (x *CartographerStreamGetResponse) GetResponse() *CartographerResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// CartographerAddRequest is used for adding new data
type CartographerAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *CartographerRequest   `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartographerAddRequest) Reset() {
	*x = CartographerAddRequest{}
	mi := &file_cartographer_v1_requests_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartographerAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartographerAddRequest) ProtoMessage() {}

func (x *CartographerAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cartographer_v1_requests_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartographerAddRequest.ProtoReflect.Descriptor instead.
func (*CartographerAddRequest) Descriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{8}
}

func (x *CartographerAddRequest) GetRequest() *CartographerRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

// CartographerAddResponse confirms the addition
type CartographerAddResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *CartographerResponse  `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartographerAddResponse) Reset() {
	*x = CartographerAddResponse{}
	mi := &file_cartographer_v1_requests_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartographerAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartographerAddResponse) ProtoMessage() {}

func (x *CartographerAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cartographer_v1_requests_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartographerAddResponse.ProtoReflect.Descriptor instead.
func (*CartographerAddResponse) Descriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{9}
}

func (x *CartographerAddResponse) GetResponse() *CartographerResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// CartographerDeleteRequest is used for deleting data
type CartographerDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartographerDeleteRequest) Reset() {
	*x = CartographerDeleteRequest{}
	mi := &file_cartographer_v1_requests_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartographerDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartographerDeleteRequest) ProtoMessage() {}

func (x *CartographerDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cartographer_v1_requests_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartographerDeleteRequest.ProtoReflect.Descriptor instead.
func (*CartographerDeleteRequest) Descriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{10}
}

func (x *CartographerDeleteRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// CartographerDeleteResponse confirms the deletion
type CartographerDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Errors        []string               `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CartographerDeleteResponse) Reset() {
	*x = CartographerDeleteResponse{}
	mi := &file_cartographer_v1_requests_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CartographerDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartographerDeleteResponse) ProtoMessage() {}

func (x *CartographerDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cartographer_v1_requests_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartographerDeleteResponse.ProtoReflect.Descriptor instead.
func (*CartographerDeleteResponse) Descriptor() ([]byte, []int) {
	return file_cartographer_v1_requests_proto_rawDescGZIP(), []int{11}
}

func (x *CartographerDeleteResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CartographerDeleteResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_cartographer_v1_requests_proto protoreflect.FileDescriptor

var file_cartographer_v1_requests_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb2, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x2e, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x2b, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x65, 0x72, 0x6d, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x72,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x21, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x0c, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x5c, 0x0a, 0x17, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x90, 0x01, 0x0a, 0x1c, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65,
	0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x62, 0x0a, 0x1d, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x5c, 0x0a, 0x17, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2d, 0x0a, 0x19, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x46,
	0x0a, 0x1a, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2a, 0x70, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x54, 0x41, 0x47, 0x10, 0x03, 0x42, 0xae, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x42, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x6a,
	0x62, 0x72, 0x6f, 0x77, 0x6e, 0x35, 0x37, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xa2, 0x02,
	0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x0f, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x43, 0x61, 0x72, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_cartographer_v1_requests_proto_rawDescOnce sync.Once
	file_cartographer_v1_requests_proto_rawDescData = file_cartographer_v1_requests_proto_rawDesc
)

func file_cartographer_v1_requests_proto_rawDescGZIP() []byte {
	file_cartographer_v1_requests_proto_rawDescOnce.Do(func() {
		file_cartographer_v1_requests_proto_rawDescData = protoimpl.X.CompressGZIP(file_cartographer_v1_requests_proto_rawDescData)
	})
	return file_cartographer_v1_requests_proto_rawDescData
}

var file_cartographer_v1_requests_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cartographer_v1_requests_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_cartographer_v1_requests_proto_goTypes = []any{
	(RequestType)(0),                      // 0: cartographer.v1.RequestType
	(*CartographerRequest)(nil),           // 1: cartographer.v1.CartographerRequest
	(*CartographerResponse)(nil),          // 2: cartographer.v1.CartographerResponse
	(*PingRequest)(nil),                   // 3: cartographer.v1.PingRequest
	(*PingResponse)(nil),                  // 4: cartographer.v1.PingResponse
	(*CartographerGetRequest)(nil),        // 5: cartographer.v1.CartographerGetRequest
	(*CartographerGetResponse)(nil),       // 6: cartographer.v1.CartographerGetResponse
	(*CartographerStreamGetRequest)(nil),  // 7: cartographer.v1.CartographerStreamGetRequest
	(*CartographerStreamGetResponse)(nil), // 8: cartographer.v1.CartographerStreamGetResponse
	(*CartographerAddRequest)(nil),        // 9: cartographer.v1.CartographerAddRequest
	(*CartographerAddResponse)(nil),       // 10: cartographer.v1.CartographerAddResponse
	(*CartographerDeleteRequest)(nil),     // 11: cartographer.v1.CartographerDeleteRequest
	(*CartographerDeleteResponse)(nil),    // 12: cartographer.v1.CartographerDeleteResponse
	(*Tag)(nil),                           // 13: cartographer.v1.Tag
	(*Group)(nil),                         // 14: cartographer.v1.Group
	(*Link)(nil),                          // 15: cartographer.v1.Link
}
var file_cartographer_v1_requests_proto_depIdxs = []int32{
	13, // 0: cartographer.v1.CartographerRequest.tags:type_name -> cartographer.v1.Tag
	14, // 1: cartographer.v1.CartographerRequest.groups:type_name -> cartographer.v1.Group
	15, // 2: cartographer.v1.CartographerRequest.links:type_name -> cartographer.v1.Link
	15, // 3: cartographer.v1.CartographerResponse.links:type_name -> cartographer.v1.Link
	1,  // 4: cartographer.v1.CartographerGetRequest.request:type_name -> cartographer.v1.CartographerRequest
	0,  // 5: cartographer.v1.CartographerGetRequest.type:type_name -> cartographer.v1.RequestType
	2,  // 6: cartographer.v1.CartographerGetResponse.response:type_name -> cartographer.v1.CartographerResponse
	1,  // 7: cartographer.v1.CartographerStreamGetRequest.request:type_name -> cartographer.v1.CartographerRequest
	0,  // 8: cartographer.v1.CartographerStreamGetRequest.type:type_name -> cartographer.v1.RequestType
	2,  // 9: cartographer.v1.CartographerStreamGetResponse.response:type_name -> cartographer.v1.CartographerResponse
	1,  // 10: cartographer.v1.CartographerAddRequest.request:type_name -> cartographer.v1.CartographerRequest
	2,  // 11: cartographer.v1.CartographerAddResponse.response:type_name -> cartographer.v1.CartographerResponse
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_cartographer_v1_requests_proto_init() }
func file_cartographer_v1_requests_proto_init() {
	if File_cartographer_v1_requests_proto != nil {
		return
	}
	file_cartographer_v1_models_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cartographer_v1_requests_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cartographer_v1_requests_proto_goTypes,
		DependencyIndexes: file_cartographer_v1_requests_proto_depIdxs,
		EnumInfos:         file_cartographer_v1_requests_proto_enumTypes,
		MessageInfos:      file_cartographer_v1_requests_proto_msgTypes,
	}.Build()
	File_cartographer_v1_requests_proto = out.File
	file_cartographer_v1_requests_proto_rawDesc = nil
	file_cartographer_v1_requests_proto_goTypes = nil
	file_cartographer_v1_requests_proto_depIdxs = nil
}
