// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        (unknown)
// source: cartographer/v1/cartographer.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_cartographer_v1_cartographer_proto protoreflect.FileDescriptor

var file_cartographer_v1_cartographer_proto_rawDesc = []byte{
	0x0a, 0x22, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x32, 0xe2, 0x03, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x63,
	0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x61, 0x72,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x27, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x61,
	0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x27,
	0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2a, 0x2e,
	0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x61, 0x72, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x47, 0x65, 0x74, 0x12, 0x2d, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0xb2, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x42, 0x11, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x72, 0x6a, 0x62, 0x72, 0x6f, 0x77, 0x6e, 0x35, 0x37, 0x2f, 0x63, 0x61, 0x72, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x0f, 0x43, 0x61, 0x72, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x43, 0x61, 0x72,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x43,
	0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x43, 0x61, 0x72,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_cartographer_v1_cartographer_proto_goTypes = []any{
	(*PingRequest)(nil),                   // 0: cartographer.v1.PingRequest
	(*CartographerGetRequest)(nil),        // 1: cartographer.v1.CartographerGetRequest
	(*CartographerAddRequest)(nil),        // 2: cartographer.v1.CartographerAddRequest
	(*CartographerDeleteRequest)(nil),     // 3: cartographer.v1.CartographerDeleteRequest
	(*CartographerStreamGetRequest)(nil),  // 4: cartographer.v1.CartographerStreamGetRequest
	(*PingResponse)(nil),                  // 5: cartographer.v1.PingResponse
	(*CartographerGetResponse)(nil),       // 6: cartographer.v1.CartographerGetResponse
	(*CartographerAddResponse)(nil),       // 7: cartographer.v1.CartographerAddResponse
	(*CartographerDeleteResponse)(nil),    // 8: cartographer.v1.CartographerDeleteResponse
	(*CartographerStreamGetResponse)(nil), // 9: cartographer.v1.CartographerStreamGetResponse
}
var file_cartographer_v1_cartographer_proto_depIdxs = []int32{
	0, // 0: cartographer.v1.Cartographer.Ping:input_type -> cartographer.v1.PingRequest
	1, // 1: cartographer.v1.Cartographer.Get:input_type -> cartographer.v1.CartographerGetRequest
	2, // 2: cartographer.v1.Cartographer.Add:input_type -> cartographer.v1.CartographerAddRequest
	3, // 3: cartographer.v1.Cartographer.Delete:input_type -> cartographer.v1.CartographerDeleteRequest
	4, // 4: cartographer.v1.Cartographer.StreamGet:input_type -> cartographer.v1.CartographerStreamGetRequest
	5, // 5: cartographer.v1.Cartographer.Ping:output_type -> cartographer.v1.PingResponse
	6, // 6: cartographer.v1.Cartographer.Get:output_type -> cartographer.v1.CartographerGetResponse
	7, // 7: cartographer.v1.Cartographer.Add:output_type -> cartographer.v1.CartographerAddResponse
	8, // 8: cartographer.v1.Cartographer.Delete:output_type -> cartographer.v1.CartographerDeleteResponse
	9, // 9: cartographer.v1.Cartographer.StreamGet:output_type -> cartographer.v1.CartographerStreamGetResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cartographer_v1_cartographer_proto_init() }
func file_cartographer_v1_cartographer_proto_init() {
	if File_cartographer_v1_cartographer_proto != nil {
		return
	}
	file_cartographer_v1_models_proto_init()
	file_cartographer_v1_requests_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cartographer_v1_cartographer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cartographer_v1_cartographer_proto_goTypes,
		DependencyIndexes: file_cartographer_v1_cartographer_proto_depIdxs,
	}.Build()
	File_cartographer_v1_cartographer_proto = out.File
	file_cartographer_v1_cartographer_proto_rawDesc = nil
	file_cartographer_v1_cartographer_proto_goTypes = nil
	file_cartographer_v1_cartographer_proto_depIdxs = nil
}
