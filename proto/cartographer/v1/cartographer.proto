// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/struct.proto"; // <-- Import Struct

option go_package = "github.com/rjbrown57/cartographer/pkg/proto";
option java_multiple_files = true;
option java_package = "io.grpc.rjbrown57.cartographer";
option java_outer_classname = "cartographerProto";

package cartographer.v1;

service Cartographer {
  // Connectivity Test
  rpc Ping (PingRequest) returns (PingResponse) {}
  rpc Get (CartographerGetRequest) returns (CartographerGetResponse) {}
  rpc Add (CartographerAddRequest) returns (CartographerAddResponse) {}
  rpc Delete (CartographerDeleteRequest) returns (CartographerDeleteResponse) {}
  rpc StreamGet (CartographerStreamGetRequest) returns (stream CartographerStreamGetResponse) {}
}

// Ping Method used for health check
message PingRequest {
  string name = 1;
}

message PingResponse {
  string message = 1;
}

message Link {
  string url = 1;
  string displayname = 2;
  string description = 3;
  repeated string tags = 4; // need to fix this to use repeated Tag tags
  google.protobuf.Struct data = 5;
}

message Tag {
  string name = 1;
  string description = 2;
}

message Group {
  string name = 1;
  string description = 2;
  repeated string tags = 3;
}

enum RequestType {
  REQUEST_TYPE_UNSPECIFIED = 0;
  REQUEST_TYPE_DATA = 1; // requests that will include links
  REQUEST_TYPE_GROUP = 2; // group creation/querying for existing groups
  REQUEST_TYPE_TAG = 3; // tag creations/queriying for existing groups
}

// Generic request message re-used in get/delete/add
message CartographerRequest {
  repeated Tag tags = 1;
  repeated Group groups = 2;
  repeated Link links = 3;
}

// The response message 
message CartographerResponse {
  repeated string msg = 1;
  repeated string tags = 2;
  repeated string groups = 3;
  repeated Link links = 4;
}

message CartographerGetRequest {
  CartographerRequest request = 1;
  RequestType type = 2;
}

message CartographerGetResponse {
  CartographerResponse response = 1;
}

message CartographerStreamGetRequest {
  CartographerRequest request = 1;
  RequestType type = 2;
}

message CartographerStreamGetResponse {
  CartographerResponse response = 1;
}

message CartographerAddRequest {
  CartographerRequest request = 1;
}

message CartographerAddResponse {
  CartographerResponse response = 1;
}

message CartographerDeleteRequest {
  CartographerRequest request = 1;
}

message CartographerDeleteResponse {
  CartographerResponse response = 1;
}